import { PageBackground } from '~/components/ui/page-background';
import { QuizResultPage } from '~/features/quizzes/components/quiz-result';
import { QUIZ_RESULT_COPY } from '~/features/quizzes/constants/quiz-result-copy';
import { dataQuizzes } from '~/features/quizzes/data';
import { getCurrentSession } from '~/root';
import type { Route } from './+types/quiz-result';
// Type imports will be generated by React Router

export function meta({ data }: Route.MetaArgs) {
  const quizTitle = data?.attempt?.quiz?.title || 'Quiz';
  return [
    { title: QUIZ_RESULT_COPY.meta.title(quizTitle) },
    {
      name: 'description',
      content: QUIZ_RESULT_COPY.meta.description(quizTitle),
    },
  ];
}

export async function loader(args: Route.LoaderArgs) {
  const currentSession = await getCurrentSession(args);
  if (!currentSession) {
    throw new Response('Unauthorized', { status: 401 });
  }

  const { attemptId } = args.params;
  if (!attemptId) {
    throw new Response('Attempt ID is required', { status: 400 });
  }

  // Get attempt with ownership check
  const attempt = await dataQuizzes.getQuizAttempt(
    attemptId,
    currentSession._id
  );
  if (!attempt) {
    throw new Response('Quiz attempt not found', { status: 404 });
  }

  // Only show results for completed attempts
  if (attempt.status === 'in_progress') {
    throw new Response('Quiz attempt not completed', { status: 400 });
  }

  return { attempt, userId: currentSession._id };
}

export default function QuizResultRoute(props: Route.ComponentProps) {
  return <QuizResultPage {...props.loaderData} />;
}
